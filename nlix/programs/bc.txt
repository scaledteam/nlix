#
# This E2 made by scaled
#

@name bc

switch (P["state", number]) {
    # Wait terminal driver
    case 0,
        if (terminalInit()) {
            terminalPrint("Calculator shell. Write \"quit\" for exit.\n")
            P["state", number] = 1
        }
        break
    
    # Wait keyboard driver
    case 1,
        if (simpleKeyboardInit()) {
            P["state", number] = 2
        }
        break
    
    # Main state
    case 2,
        terminalPrint("> ")
        simpleKeyboardRequestInput()
        
        P["state", number] = 3
        break
    
    # Get input
    case 3,
        if (simpleKeyboardWaitInput()) {
            local Input = simpleKeyboardGetInput()
            P["input", string] = Input
            switch (Input) {
                case "",
                    P["state", number] = 2
                    break
                
                case "quit", case "exit",
                    programKill()
                    break
                
                default,
                    P["state", number] = 4
                    break
            }
        }
        break
    
    # Compute
    case 4,
        local Input = P["input", string]
        
        local InputExplode = array()
        local LastDivider = 0
        
        local InputActions = array()
        
        local Result = 0
        
        # Separate numbers
        for (I = 1, Input:length()) {
            local Char = Input[I]
            if (Char == "+" | Char == "-" | Char == "*" | Char == "/") {
                InputExplode:pushNumber(Input:sub(LastDivider + 1, I - 1):toNumber())
                LastDivider = I
                
                InputActions:pushString(Char)
            }
        }
        InputExplode:pushNumber(Input:sub(LastDivider + 1):toNumber())
        
        # Replace actions on numbers
        ## *, /
        local I = 1
        while (I <= InputActions:count()) {
            if (InputActions[I, string] == "*") {
                InputExplode[I, number] = InputExplode[I, number] * InputExplode[I + 1, number]
                InputActions:remove(I)
                InputExplode:remove(I + 1)
            }
            elseif (InputActions[I, string] == "/") {
                InputExplode[I, number] = InputExplode[I, number] / InputExplode[I + 1, number]
                InputActions:remove(I)
                InputExplode:remove(I + 1)
            }
            else {
                I++
            }
        }
        
        ## +, -
        I = 1
        while (I <= InputActions:count()) {
            if (InputActions[I, string] == "+") {
                InputExplode[I, number] = InputExplode[I, number] + InputExplode[I + 1, number]
                InputActions:remove(I)
                InputExplode:remove(I + 1)
            }
            elseif (InputActions[I, string] == "-") {
                InputExplode[I, number] = InputExplode[I, number] - InputExplode[I + 1, number]
                InputActions:remove(I)
                InputExplode:remove(I + 1)
            }
            else {
                I++
            }
        }
        
        local Output = InputExplode:concat(" ") + "\n"
        terminalPrint(Output)
        P["state", number] = 2
        break
}
