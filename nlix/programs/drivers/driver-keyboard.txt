#
# This E2 made by scaled
#

@name driver-keyboard

switch (P["state", number]) {
    case 0,
        eventInit()
        driverInit()
        P["state", number] = 1
        break
    
    case 1,
        if (driverPopDevice("gmod_wire_keyboard")) {
            P["state", number] = 2
        }
        elseif (driverPopDevice("virtual-keyboard")) {
            P["state", number] = 2
        }
        elseif (driverPopDevice("gmod_wire_textentry")) {
            P["inputString", string] = ""
            P["state", number] = 2
        }
        break
    
    case 2,
        P["keys", array] = array()
        
        P["state", number] = 3
        break
    
    # Track keys
    case 3,
        local Device = P["device", table]
        if (Device:isValid()) {
            DeviceType = Device:type()
            
            switch (DeviceType) {
                case "gmod_wire_keyboard",
                    local Keys = P["keys", array]
                    local Count = Device["port", wirelink][0]
                    for (I = 1, Count) {
                        Keys[I, number] = Device["port", wirelink][I]
                    }
                    Count++
                    for (I = Count, Keys:count()) {
                        Keys:remove(Count)
                    }
                    break
                
                case "virtual-keyboard",
                    P["keys", array] = Device["keys", array]
                    break
                
                case "gmod_wire_textentry",
                    local Keys = P["keys", array]
                    local InputString = Device["port", wirelink]["Text", string]
                    
                    if (InputString != P["inputString", string]) {
                        P["inputString", string] = InputString
                        if (InputString != "") {
                            InputString += "\n"
                            local Length = InputString:length()
                            
                            for (I = 1, Length) {
                                Keys[I, number] = toUnicodeByte(InputString[I])
                            }
                        }
                    }
                    else {
                        Keys:clear()
                    }
                    break
            }
        }
        else {
            driverPushDevice()
            P["state", number] = 1
        }
        
        if (eventWaitString("exit")) {
            driverPushDevice()
            programKill()
        }
        break
}
