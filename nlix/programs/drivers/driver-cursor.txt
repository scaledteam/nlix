#
# This E2 made by scaled
#

@name driver-cursor

switch (P["state", number]) {
    case 0,
        eventInit()
        driverInit()
        P["state", number] = 1
        break
    
    case 1,
        local Device = NULL
        if (egpInit()) {
            Device = P["driver-egp", table]:driverGetDevice()
            
            if (Device:type() == "gmod_wire_egp") {
                P["device", table] = Device
                
                if (Device:type() == "gmod_wire_egp") {
                    P["need-to-find-user", number] = 1
                    P["state", number] = 2
                }
            }
            else {
                Device = NULL
            }
        }
        
        if (Device == NULL) {
            if (driverPopDevice("virtual-cursor")) {
                P["state", number] = 2
            }
        }
        break
    
    case 2,
        #ifdef findInSphere(vector,number)
            if (P["need-to-find-user", number]) {
                findIncludeClass("player")
            }
        #endif
        
        if (P["need-to-find-user", number]) {
            P["state", number] = 3
        }
        else {
            P["state", number] = 4
        }
        break
    
    case 3,
        if (P["need-to-find-user", number]) {
            #ifdef findInSphere(vector,number)
                local ScanPos = P["device", table]["port", wirelink]:entity():pos()
                findInSphere(ScanPos, 100)
                findSortByDistance(ScanPos)
                P["user", entity] = find()
            #else
                local ScanPos = P["device", table]["port", wirelink]:entity():pos()
                local Player_Distance = 100
                foreach(I, Player:entity = players()){
                    local Distance = ScanPos:distance(Player:pos())
                    if (Distance < Player_Distance){
                        Player_Distance = Distance
                        P["user", Player)
                    }
                }
            #endif
        }
        
        P["state", number] = 4
        break
    
    case 4,
        local Device = P["device", table]
        
        switch (Device:type()) {
            case "gmod_wire_egp",
                P["pos", vector2] = Device["port", wirelink]:egpCursor(P["user", entity])
                P["use", number] = P["user", entity]:keyUse()
                break
            
            case "virtual-cursor",
                P["pos", vector2] = Device["pos", vector2]
                P["use", number] = Device["use", number]
                break
        }
        if (P["need-to-find-user", number]) {
            P["state", number] = 3
        }
        
        if (eventWaitString("exit")) {
            driverPushDevice()
            programKill()
        }
        break
}
