#
# Created by scaled
#

@name xmenu

P2F["xmenu", string] = "xmenu"

function xmenu() {
    switch (P["state", number]) {
        case 0,
            if (xcanCreate(4)) {
                # Panel
                local List = S["xmenu", table]:keys()
                P["categories", array] = List
                
                local MenuWidth = 0
                foreach (I, Name:string = P["categories", array]) {
                    local Length = Name:length()
                    if (Length > MenuWidth) {
                        MenuWidth = Length
                    }
                }
                local MenuSize = vec2(P["xparam", table]["symbolWidth", number] * MenuWidth, List:count()) * 20
                
                P["pos", vector2] = vec2(0, P["xframe", table]["size", vector2][2] - 20 - MenuSize[2])
                
                P["menu", table] = xcreate("box"):xsize(MenuSize):xcolor(vec(63)):xpos(P["pos", vector2])
                P["menuText", table] = xcreate("textLayout"):xsize(MenuSize):xtext(List:concat("\n")):xsize(20):xpos(P["pos", vector2])
                
                P["submenu", table] = xcreate("box"):xalpha(0):xcolor(vec(63))
                P["submenuText", table] = xcreate("textLayout"):xalpha(0):xsize(20)
                
                P["xframe", table]["parent", table]["xmenu", table] = P
                
                P["state", number] = 1
            }
            break
        
        case 1,
            if (xcanDraw()) {
                local Cursor = xcursor()
                
                local PosN = int((Cursor[2] - P["pos", vector2][2]) / 20) + 1
                
                if (PosN != P["posNOld", number] & inrange(Cursor - P["pos", vector2], vec2(), P["menu", table]["size", vector2] + vec2(0, 20))) {
                    P["posNOld", number] = PosN
                    
                    local List = S["xmenu", table][P["categories", array][PosN, string], array]
                    P["programList", array] = List
                    
                    local MenuWidth = 0
                    foreach (I, Name:string = List) {
                        local Length = Name:length()
                        if (Length > MenuWidth) {
                            MenuWidth = Length
                        }
                    }
                    
                    local MenuSize = vec2(P["xparam", table]["symbolWidth", number] * MenuWidth, List:count()) * 20
                    
                    local Pos = vec2(P["menu", table]["size", vector2][1], -MenuSize[2] + PosN * 20) + P["pos", vector2]
                    P["submenu", table]:xsize(MenuSize):xalpha(255):xpos(Pos)
                    P["submenuText", table]:xsize(MenuSize):xtext(List:concat("\n")):xalpha(255):xpos(Pos)
                }
                
                if (xkeyUse()) {
                    if (inrange(Cursor - P["pos", vector2], vec2(), P["menu", table]["size", vector2] + vec2(0, 20))) {
                    }
                    elseif (inrange(Cursor - P["submenu", table]["pos", vector2], vec2(), P["submenu", table]["size", vector2])) {
                        local PosN = int((Cursor[2] - P["submenu", table]["pos", vector2][2]) / 20) + 1
                        
                        out(P["programList", array][PosN, string])
                        end()
                    }
                    else {
                        end()
                    }
                }
            }
            break
    }
}
