#
# Created by scaled
#

@name libio
@persist [ERASE ERASE1]:string

#ERASE  = toChar(15) + "erase"
ERASE1 = toChar(15) + "erase1"

function out(Text:string) {
    P["out", array]:pushString(Text)
}

function number wait() {
    return P["in", array]:count() > 0
}

function string in() {
    return P["in", array]:shiftString()
}

function erase() {
    P["out", array]:pushString(ERASE1)
}

#[function erase(Count) {
    P["out", array]:pushString(ERASE)
    P["out", array]:pushNumber(Count)
}]#


function string arg(Number) {
    return P["args", array][Number, string]
}

function number args() {
    return P["args", array]:count()
}


# Additional functions
#[function number wait(OutName:string) {
    return P[OutName, array]:count() > 0
}

function string in(OutName:string) {
    return P[OutName, array]:shiftString()
}

function out(OutName:string, Text:string) {
    P[OutName, array]:pushString(Text)
}]#
