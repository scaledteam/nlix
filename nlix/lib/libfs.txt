#
# Created by scaled
#

@name libfs

function number fsCall(Mode:string, Path:string) {
    # Add first slash if not added
    if (Path[1] != "/") {
        Path = "/" + Path
    }
    
    # Remove last slash if it has
    if (Path[Path:length()] == "/") {
        Path = Path:sub(1, -2)
    }
    
    local PathExp = Path:explode("/")
    
    local Fstab = S["fstab", table]
    
    local I = PathExp:count()
    while (I > 0) {
        local BeforeFsPath = PathExp:concat("/", 1, I)
        if (BeforeFsPath == "") {
            BeforeFsPath = "/"
        }
        
        if (Fstab:exists(BeforeFsPath)) {
            local Fs = Fstab[BeforeFsPath, table]
            local Program = exec("fs-" + Fs:type())
            
            Program["mode", string] = Mode
            Program["fs", table] = Fs
            Program["path", string] = PathExp:concat("/", I + 1) # After fs path
            
            P["fs", table] = Program
            
            return 1
        }
        I--
    }
    
    return 0
}
