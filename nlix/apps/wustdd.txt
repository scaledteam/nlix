#
# Created by scaled
#

@name wustdd

switch (ThisAppState) {
    # Initialize egp
    case 0,
        if (initGl()) {
            appNextState()
        }
        break
    
    case 1,
        varWrite("MAP", array())
        varWrite("MAP_POLYGONS", 100)
        glColor(vec(50, 200, 50))
        glFillColor(vec(50, 50, 60))
        
        glPos(vec(0, -0.5, -2))
        glAng(ang(0, 0, 15))
        
        appNextState()
        break
    
    case 2,
        for (I = 1, TICKS_INSIDE) {
            local Counter = varNumber("counter") + 1
            
            #Generate map
            local Max_Iterations = int(varNumber("MAP_POLYGONS") / 2)
            local Angle_Step = 360 / Max_Iterations
            local Angle = Counter / Max_Iterations * 360
            varArray("MAP"):insertMatrix(2 * Counter - 1, matrix(
                sin(Angle), 0, cos(Angle),
                sin(Angle), 1, cos(Angle),
                sin(Angle + Angle_Step), 0, cos(Angle + Angle_Step)
            ))
            varArray("MAP"):insertMatrix(2 * Counter, matrix(
                sin(Angle), 1, cos(Angle),
                sin(Angle + Angle_Step), 1, cos(Angle + Angle_Step),
                sin(Angle + Angle_Step), 0, cos(Angle + Angle_Step)
            ))
            
            if (Counter >= Max_Iterations) {
                varWrite("counter", 0)
                
                appNextState()
                break
            }
            else {
                varWrite("counter", Counter)
            }
        }
        break
    
    case 3,
        if (glReady()) {
            glStart()
            appNextState()
        }
        break
    
    case 4,
        glAng(ang(10 * sin(45 * systime()), 0, 15))
        
        for (I = 1, TICKS_INSIDE) {
            local Counter = varNumber("counter") + 1
            
            local MAP = varArray("MAP")
            glColor(vec(50, 200, 50) * (cosr(pi() * Counter) + 2) / 3)
            glTriangle(MAP[Counter, matrix]:row(1), MAP[Counter, matrix]:row(2), MAP[Counter, matrix]:row(3))
            
            if (Counter >= MAP:count()) {
                varWrite("counter", 0)
                
                appPrevState()
                break
            }
            else {
                varWrite("counter", Counter)
            }
        }
        break
}
