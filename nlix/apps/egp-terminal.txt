#
# This E2 made by scaled
#

@name egp-terminal

switch (ThisAppState) {
    # Initialize egp
    case 0,
        if (initEgp()) {
            appNextState()
        }
        break
    
    case 1,
        if (initKeyboard()) {
            appNextState()
        }
        break
    
    case 2,
        local Workspace = createWorkspace(AUTOSTART_TERMINAL)
        local VirtualTerminal = createVirtualTerminal()
        local VirtualKeyboard = createVirtualKeyboard()
        
        Workspace:addDevice(VirtualTerminal)
        Workspace:addDevice(VirtualKeyboard)
        Workspace:startWorkspace()
        
        appT("workspace", Workspace)
        appT("terminalDevice", VirtualTerminal)
        appT("keyboardDevice", VirtualKeyboard)
        
        appNextState()
        break
    
    case 3,
        local Size = egpResolution()
        egpBox(1, vec2(), Size)
        egpParentToBase(1)
        egpColor(1, vec(50))
        
        egpTextLayout(2, "Waiting workspace...", vec2(), Size)
        egpParentToBase(2)
        
        appNextState()
        break
    
    case 4,
        # Virtual screen driver
        local VirtualTerminal = appT("terminalDevice")
        if (VirtualTerminal["new-output", string] != "") {
            appS("console-text", appS("console-text") + VirtualTerminal["new-output", string])
            VirtualTerminal["new-output", string] = ""
            
            egpSetText(2, appS("console-text"))
        }
        
        if (VirtualTerminal["new-erase", number] != 0) {
            appS("console-text", appS("console-text"):left(appS("console-text"):length() - VirtualTerminal["new-erase", number]))
            VirtualTerminal["new-erase", number] = 0
            
            egpSetText(2, appS("console-text"))
        }
        
        # Virtual keyboard driver
        local VirtualKeyboard = appT("keyboardDevice")
        VirtualKeyboard["keys", array] = keyboardGetKeys()
        break
}
