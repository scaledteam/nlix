#
# This E2 made by scaled
#

@name egp-wm-launcher

switch (ThisAppState) {
    # Initialize egp
    case 0,
        if (initEgp()) {
            appNextState()
        }
        break
    
    case 1,
        local VirtualKeyboardDevice = findDeviceByType("virtual-keyboard")
        if (VirtualKeyboardDevice != NULL) {
            local Workspace = createWorkspace(array("driver-terminal", "driver-keyboard", "simple-keyboard", "egp-wm-shell"))
            local VirtualTerminal = createVirtualTerminal()
            
            Workspace:addDevice(VirtualTerminal)
            Workspace:addDevice(VirtualKeyboardDevice)
            Workspace:startWorkspace()
            
            appT("workspace", Workspace)
            appT("terminalDevice", VirtualTerminal)
            
            appNextState()
        }
        break
    
    # Wait callback device
    case 2,
        local CallbackDevice = findDeviceByType("egp-wm-callback")
        if (CallbackDevice != NULL) {
            appT("workspace"):addDevice(CallbackDevice)
            appNextState()
        }
        break
    
    case 3,
        local Size = egpResolution()
        egpBox(1, vec2(), Size)
        egpParentToBase(1)
        egpColor(1, vec(50))
        
        egpTextLayout(2, "Waiting workspace...", vec2(), Size)
        egpParentToBase(2)
        
        appNextState()
        break
    
    case 4,
        # Virtual screen driver
        local ConsoleScreenDevice = appT("terminalDevice")
        if (ConsoleScreenDevice["new-output", string] != "") {
            appS("console-text", appS("console-text") + ConsoleScreenDevice["new-output", string])
            ConsoleScreenDevice["new-output", string] = ""
            
            egpSetText(2, appS("console-text"))
        }
        
        if (ConsoleScreenDevice["new-erase", number] != 0) {
            appS("console-text", appS("console-text"):left(appS("console-text"):length() - ConsoleScreenDevice["new-erase", number]))
            ConsoleScreenDevice["new-erase", number] = 0
            
            egpSetText(2, appS("console-text"))
        }
        break
}
