#
# Created by scaled
#

@name xworker

P2F["xworker", string] = "xworker"

function xworker() {
    switch (P["state", number]) {
        case 0,
            switch (P["action", string]) {
                case "free",
                    P["state", number] = 1
                    break
                
                default,
                    out("Error: unknown action.\n")
                    end()
            }
            break
        
        case 1,
            local Frame = P["xframe", table]
            if (Frame:exists("parent")) {
                local MainFrame = Frame["mainFrame", table]
                
                if (Frame["id", number] + Frame["objects", table]:count() >= MainFrame["objects", table][MainFrame["lastId", number], table]["id", number]) {
                    if ((MainFrame["objects", table]:count() - MainFrame["lastId", number]) >= P["count", number]) {
                        P["xframeSource", table] = MainFrame
                        P["xframeTargets", table] = table()
                        
                        local Target = Frame
                        while (Target:exists("parent")) {
                            P["xframeTargets", table]:pushTable(Target)
                            Target = Target["parent", table]
                        }
                        
                        P["state", number] = 2
                    }
                    else {
                        out("Error: Can't free place.\n")
                        end()
                    }
                }
                else {
                    #[print("Oops")
                    local Text = ""
                    for (I = 1, MainFrame["lastId", number]) {
                        Text += MainFrame["objects", table][I, table]["id", number] + ", " + MainFrame["objects", table][I, table]["type", string] + "\n"
                    }
                    print(Text)]#
                    
                    P["counter", number] = MainFrame["lastId", number]
                    P["limit", number] = Frame["id", number] + Frame["objects", table]:count()
                    
                    MainFrame["lastId", number] = MainFrame["lastId", number] + P["count", number]
                    
                    P["xframeSource", table] = MainFrame
                    P["xframeTargets", table] = table()
                    
                    local Target = Frame
                    while (Target:exists("parent")) {
                        P["xframeTargets", table]:pushTable(Target)
                        Target = Target["parent", table]
                    }
                    
                    P["state", number] = 3
                }
            }
            else {
                out("Error: Can't free place.\n")
                end()
            }
            break
        
        case 2,
            local Frame = P["xframe", table]
            local Source = P["xframeSource", table]
            
            local Counter = P["counter", number]
            
            for (I = 1, Overload) {
                Counter++
                
                local Id = Source["lastId", number] + 1
                Source["lastId", number] = Id
                
                local Object = Source["objects", table][Id, table]
                Object["parent", table] = Frame
                
                for (J = 1, P["xframeTargets", table]:count()) {
                    local TempFrame = P["xframeTargets", table][J, table]
                    
                    TempFrame["objects", table]:pushTable(Object)
                    
                    if (TempFrame != Frame) {
                        TempFrame["lastId", number] = TempFrame["lastId", number] + 1
                    }
                }
                
                if (Counter >= P["count", number]) {
                    P["xframeTargets", table]:clear()
                    end()
                    return
                }
            }
            P["counter", number] = Counter
            break
        
        # Moving up
        case 3,
            local Objects = P["xframe", table]["mainFrame", table]["objects", table]
            
            local Counter = P["counter", number]
            
            for (I = 1, Overload) {
                if (Counter < P["limit", number]) {
                    #[print("Result")
                    local MainFrame = P["xframe", table]["mainFrame", table]
                    local Text = ""
                    for (I = 1, MainFrame["lastId", number]) {
                        Text += MainFrame["objects", table][I, table]["id", number] + ", " + MainFrame["objects", table][I, table]["type", string] + "\n"
                    }
                    print(Text)]#
                    P["counter", number] = Counter
                    P["limit", number] = Counter + P["count", number]
                    
                    P["state", number] = 4
                    return
                }
                
                xswitch(Objects, Counter, Counter + P["count", number])
                
                xdraw(Objects[Counter + P["count", number], table])
                
                Counter--
            }
            P["counter", number] = Counter
            break
        
        # Move objects to source
        case 4,
            local Frame = P["xframe", table]
            local Source = P["xframeSource", table]
            
            local Counter = P["counter", number]
            
            for (I = 1, Overload) {
                Counter++
                
                local Object = Source["objects", table][Counter, table]
                Object["parent", table] = Frame
                
                xdraw(Object)
                
                for (J = 1, P["xframeTargets", table]:count()) {
                    local TempFrame = P["xframeTargets", table][J, table]
                    
                    TempFrame["objects", table]:pushTable(Object)
                    
                    if (TempFrame != Frame) {
                        TempFrame["lastId", number] = TempFrame["lastId", number] + 1
                    }
                }
                
                if (Counter >= P["limit", number]) {
                    #[print("Result")
                    local MainFrame = P["xframe", table]
                    local Text = ""
                    for (I = 1, MainFrame["objects", table]:count()) {
                        Text += I + ", " + MainFrame["objects", table][I, table]["id", number] + ", " + MainFrame["objects", table][I, table]["type", string] + "\n"
                    }
                    print(Text)]#
                    
                    P["xframeTargets", table]:clear()
                    end()
                    return
                }
            }
            P["counter", number] = Counter
            break
    }
}
