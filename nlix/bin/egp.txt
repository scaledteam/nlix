#
# Created by scaled
#

@name egp

switch (P["state", number]) {
    case 0,
        P["objects", table] = table()
        
        P["limit", number] = min(200, egpMaxObjects())
        
        P["state", number] = 1
        break
    
    case 1,
        local Device = P["device", wirelink]
        local Objects = P["objects", table]
        local Counter = P["counter", number]
        
        for (I = 1, Overload) {
            Counter++
            
            local Object = object("box")
            Object["color", vector] = vec(255)
            Objects[Counter, table] = Object
            
            if (Counter >= P["limit", number]) {
                P["state", number] = 2
                break
            }
        }
        P["counter", number] = Counter
        break
    
    case 2,
        if (deviceGet("gmod_wire_egp")) {
            local Device = P["device", wirelink]
            
            P["out", array][1, vector2] = P["res", vector2] = vec2(512)
            P["out", array][2, number] = P["limit", number]
            
            Device:egpClear()
            Device:egpDrawTopLeft(1)
            Device:egpResolution(vec2(), P["res", vector2])
            
            P["counter", number] = P["limit", number]
            P["state", number] = 3
        }
        break
    
    case 3,
        local Counter = P["counter", number]
        
        for (I = 1, Overload) {
            P["in", array]:unshiftNumber(Counter)
            P["in", array]:unshiftString("update")
            
            if (Counter <= 1) {
                P["state", number] = 4
                break
            }
            
            Counter--
        }
        P["counter", number] = Counter
        break
    
    case 4,
        local In = P["in", array]
        local Device = P["device", wirelink]
        local Objects = P["objects", table]
        
        if (Device) {
            for (I = 1, Overload) {
                if (wait()) {
                    local Command = in()
                    local Id = In:shiftNumber()
                    local Object = Objects[Id, table]
                    
                    switch (Command) {
                        case "box",
                            Object:setType(Command)
                            Object["pos", vector2] = In:shiftVector2()
                            Object["size", vector2] = In:shiftVector2()
                            Device:egpBox(Id, Object["pos", vector2], Object["size", vector2])
                            Device:egpColor(Id, Object["color", vector])
                            if (Object:exists("parent")) {
                                Device:egpParent(Id, Object["parent", number])
                            }
                            else {
                                Device:egpUnParent(Id)
                            }
                            break
                        
                        case "circle",
                            Object:setType(Command)
                            Object["pos", vector2] = In:shiftVector2()
                            Object["size", vector2] = In:shiftVector2()
                            Device:egpCircle(Id, Object["pos", vector2], Object["size", vector2])
                            Device:egpColor(Id, Object["color", vector])
                            if (Object:exists("parent")) {
                                Device:egpParent(Id, Object["parent", number])
                            }
                            else {
                                Device:egpUnParent(Id)
                            }
                            break
                        
                        case "line",
                            Object:setType(Command)
                            Object["pos", vector2] = In:shiftVector2()
                            Object["size", vector2] = In:shiftVector2()
                            Device:egpLine(Id, Object["pos", vector2], Object["size", vector2])
                            Device:egpColor(Id, Object["color", vector])
                            if (Object:exists("parent")) {
                                Device:egpParent(Id, Object["parent", number])
                            }
                            else {
                                Device:egpUnParent(Id)
                            }
                            break
                        
                        case "text",
                            Object:setType(Command)
                            Object["text", string] = In:shiftString()
                            Object["pos", vector2] = In:shiftVector2()
                            Object["size", vector2] = In:shiftVector2()
                            Object["sizeNumber", number] = 18
                            Object["alignX", number] = 0
                            Object["alignY", number] = 0
                            Device:egpTextLayout(Id, Object["text", string], Object["pos", vector2], Object["size", vector2])
                            Device:egpFont(Id, "Courier New")
                            Device:egpSize(Id, Object["sizeNumber", number])
                            Device:egpAlign(Id, Object["alignX", number], Object["alignY", number])
                            Device:egpColor(Id, Object["color", vector])
                            if (Object:exists("parent")) {
                                Device:egpParent(Id, Object["parent", number])
                            }
                            else {
                                Device:egpUnParent(Id)
                            }
                            break
                        
                        case "triangle",
                            Object:setType(Command)
                            Object["pos1", vector2] = In:shiftVector2()
                            Object["pos2", vector2] = In:shiftVector2()
                            Object["pos3", vector2] = In:shiftVector2()
                            Device:egpTriangle(Id, Object["pos1", vector2], Object["pos2", vector2], Object["pos3", vector2])
                            Device:egpColor(Id, Object["color", vector])
                            if (Object:exists("parent")) {
                                Device:egpParent(Id, Object["parent", number])
                            }
                            else {
                                Device:egpUnParent(Id)
                            }
                            break
                            
                        case "update",
                            local Type = Object:type()
                            
                            switch (Type) {
                                case "box",
                                    Device:egpBox(Id, Object["pos", vector2], Object["size", vector2])
                                    break
                                
                                case "circle",
                                    Device:egpCircle(Id, Object["pos", vector2], Object["size", vector2])
                                    break
                                
                                case "line",
                                    Device:egpLine(Id, Object["pos", vector2], Object["size", vector2])
                                    Device:egpSize(Id, Object[Command, number])
                                    break
                                
                                case "text",
                                    Device:egpTextLayout(Id, Object["text", string], Object["pos", vector2], Object["size", vector2])
                                    Device:egpFont(Id, "Courier New")
                                    Device:egpSize(Id, Object["sizeNumber", number])
                                    Device:egpAlign(Id, Object["alignX", number], Object["alignY", number])
                                    break
                                
                                default,
                            }
                            Device:egpColor(Id, Object["color", vector])
                            if (Object:exists("parent")) {
                                Device:egpParent(Id, Object["parent", number])
                            }
                            else {
                                Device:egpUnParent(Id)
                            }
                            break
                        
                        case "color",
                            Object[Command, vector] = In:shiftVector()
                            Device:egpColor(Id, Object[Command, vector])
                            break
                        
                        case "pos",
                            Object[Command, vector2] = In:shiftVector2()
                            Device:egpPos(Id, Object[Command, vector2])
                            break
                        
                        case "size",
                            Object[Command, vector2] = In:shiftVector2()
                            Device:egpSize(Id, Object[Command, vector2])
                            break
                        
                        case "sizeNumber",
                            Object[Command, number] = In:shiftNumber()
                            Device:egpSize(Id, Object[Command, number])
                            break
                        
                        case "setText",
                            Object["text", string] = In:shiftString()
                            Device:egpSetText(Id, Object["text", string])
                            break
                        
                        case "align1",
                            Object["alignX", number] = In:shiftNumber()
                            Device:egpAlign(Id, Object["alignX", number])
                            break
                        
                        case "align2",
                            Object["alignX", number] = In:shiftNumber()
                            Object["alignY", number] = In:shiftNumber()
                            Device:egpAlign(Id, Object["alignX", number], Object["alignY", number])
                            break
                        
                        case "remove", 
                            Object:clear()
                            Object:setType("box")
                            Object["color", vector] = vec(255)
                            
                            Device:egpBox(Id, vec2(), vec2())
                            break
                        
                        case "parent",
                            Object[Command, number] = In:shiftNumber()
                            Device:egpParent(Id, Object[Command, number])
                            break
                        
                        default,
                    }
                }
                else {
                    break
                }
            }
            
            # Cursor
            if (systime() > P["timer1000", number]) {
                #ifdef findByClass(string)
                
                findByClass("player")
                findSortByDistance(Device:entity():pos())
                P["user", entity] = find()
                
                #else
                
                local ScreenPos = Device:entity():pos()
                
                local User = owner():pos()
                local Distance = ScreenPos:distance(User)
                
                foreach (I, Player:entity = players()) {
                    local TempDistance = ScreenPos:distance(Player:pos())
                    if (TempDistance < Distance) {
                        Distance = TempDistance
                        User = Player
                    }
                }
                
                P["user", entity] = User
                
                #endif
                
                P["timer1000", number] = systime() + 1
            }
            
            P["out", array][3, vector2] = Device:egpCursor(P["user", entity])
            P["out", array][4, number] = P["user", entity]:keyUse()
        }
        else {
            P["state", number] = 2
        }
        break
}
