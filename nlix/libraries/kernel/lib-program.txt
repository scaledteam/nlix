#
# Created by scaled
#

@name lib-program

function table table:programStart(Name:string) {
    local Program = object(Name)
    
    Program["environment", table] = This
    Programs:pushTable(Program)
    return Program
}

function table programStart(Name:string) {
    return E:programStart(Name)
}

function table:programKill() {
    This:setType("killself")
}

function programKill() {
    P:programKill()
}

function table programFindByName(Name:string) {
    for (I = 1, Programs:count()) {
        local Program = Programs[I, table]
        if (Program:type() == Name & Program["environment", table] == E) {
            return Program
        }
    }
    return NULL
}

function programKillAll() {
    for (I = 1, Programs:count()) {
        local Program = Programs[I, table]
        
        local ProgramTableTypes = Program:typeidsArray()
        foreach (J, Type:string = ProgramTableTypes) {
            if (Type == "t") {
                Program[J, table]:clear()
            }
            elseif (Type == "r") {
                Program[J, array]:clear()
            }
        }
        Program:clear()
    }
    Programs:clear()
}
