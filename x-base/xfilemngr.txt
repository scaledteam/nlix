#
# Created by scaled
#

@name xfilemngr

xmenuAdd("base", "xfilemngr")

P2F["xfilemngr", string] = "xfilemngr"

function xfilemngr() {
    switch (P["state", number]) {
        case 0,
            if (xcanCreate(10)) {
                local Res = xres()
                
                xcreate("box"):xsize(Res):xcolor(vec(90, 90, 180))
                
                local Size = Res * vec2(0.5, 1) - vec2(0, 20)
                xcreate("box"):xsize(Size)
                P[0, table] = xcreate("textLayout"):xsize(Size):xsize(10):xcolor(vec())
                
                local Pos = vec2(Res[1] / 2, 0)
                xcreate("box"):xsize(Size):xpos(Pos)
                P[1, table] = xcreate("textLayout"):xsize(Size):xsize(10):xcolor(vec()):xpos(Pos):xtext("/")
                
                Pos = vec2(0, Res[2] - 20)
                xcreate("text"):xpos(Pos):xtext("place for buttons")
                
                if (!P:exists("in")) {
                    P["in", array] = array()
                }
                P["state", number] = 1
            }
            break
        
        case 1,
            local Ls = exec("ls")
            Ls["args", array] = array(P[P["focus", number], table]["path", string])
            Ls["out", array] = P["in", array]
            P["state", number] = 2
            break
        
        case 2,
            if (wait()) {
                P[P["focus", number], table]:xtext("..\n" + in())
                P["state", number] = 3
            }
            break
        
        case 3,
            if (xcanDraw()) {
                local Cursor = xcursor()
                local Use = xkeyUse()
                
                if (Use != P["useOld", number]) {
                    P["useOld", number] = Use
                    
                    local Focus = P["focus", number]
                    
                    if (Use) {
                        if (inrange(Cursor - P[!Focus, table]["pos", vector2], vec2(), P[!Focus, table]["size", vector2])) {
                            Focus = !Focus
                            P["focus", number] = Focus
                        }
                        
                        local List = P[Focus, table]
                        if (inrange(Cursor - List["pos", vector2], vec2(), List["size", vector2])) {
                            local Pos = int((Cursor[2] - List["pos", vector2][2]) / 10) + 1
                            
                            local Choose = List["text", string]:explode("\n")[Pos, string]
                            
                            if (Choose == "..") {
                                local PathExplode = List["path", string]:explode("/")
                                PathExplode:pop()
                                PathExplode:pop()
                                
                                List["path", string] = PathExplode:concat("/") + "/"
                                P["state", number] = 1
                            }
                            elseif (Choose:right(1) != "/") {
                                out("Error: This not a directory\n")
                            }
                            else {
                                List["path", string] = List["path", string] + Choose
                                P["state", number] = 1
                            }
                        }
                    }
                }
            }
            break
    }
}
