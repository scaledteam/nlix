#
# Created by scaled
#

@name libdevices

S["devices", table] = table(
    "byId" = table(),
    "P" = table(),
    "D" = table()
)

function string wirelink:type() {
    local Name = This:entity():type()
    
    if (Name == "gmod_wire_expression2") {
        return This:entity():getName()
    }
    else {
        return Name
    }
}

function number deviceGet(Type:string) {
    if (S["devices", table]:exists(Type) & !P["device", wirelink]) {
        local Devices = S["devices", table][Type, array]
        
        if (Devices:count() > 0) {
            local Device = Devices:shiftWirelink()
            if (Device) {
                P["device", wirelink] = Device
                S["devices", table]["P", table]:pushTable(P)
                S["devices", table]["D", table]:pushWirelink(Device)
                
                if (Devices:count() == 0) {
                    S["devices", table]:remove(Type)
                }
                return 1
            }
        }
        
        if (Devices:count() == 0) {
            S["devices", table]:remove(Type)
        }
    }
    return 0
}

function deviceReturn() {
    local Device = P:removeWirelink("device")
    if (Device) {
        local DeviceType = Device:type()
        
        if (P:exists(DeviceType)) {
            S["devices", table][DeviceType, array]:unshiftWirelink(Device)
        }
        else {
            S["devices", table][DeviceType, array] = array(Device)
        }
    }
}

function number deviceNew(Port:wirelink) {
    local PortEntity = Port:entity()
    
    if (PortEntity) {
        # Check if device exists
        local Type = Port:type()
        local Id = PortEntity:id()
        
        local Devices = S["devices", table]
        if (!Devices:exists(Type)) {
            Devices[Type, array] = array(Port)
            Devices["byId", table][Id, wirelink] = Port
            return 1
        }
        elseif (Devices["byId", table][Id, wirelink] != Port) {
            Devices[Type, array]:pushWirelink(Port)
            Devices["byId", table][Id, wirelink] = Port
            return 1
        }
    }
    return 0
}
