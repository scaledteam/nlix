#
# Created by scaled
#

@name dremove

PEnabled["dremove", number] = 1

function dremove() {
    if (args() > 0) {
        local Id = arg(1):toNumber()
        
        if (Id != 0) {
            local Entity = entity(Id)
            
            local Removed = 0
            foreach (DeviceType, DeviceList:array = S["dev", table]) {
                foreach (I, Device:wirelink = DeviceList) {
                    if (Device:entity() == Entity) {
                        DeviceList:remove(I)
                        S["dev", table]["byId", table][Id, wirelink] = nowirelink()
                        
                        if (DeviceList:count() == 0) {
                            S["dev", table]:remove(DeviceType)
                        }
                        
                        Removed = 1
                        break
                    }
                }
            }
            if (!Removed) {
                out("Error: Device with id " + Id + " is not exists.\n")
            }
        }
        else {
            local Type = arg(1)
            if (S["dev", table]:exists(Type)) {
                local Devices = S["dev", table]:removeArray(Type)
                while (Devices:count() > 0) {
                    S["dev", table]["byId", table][Devices:popWirelink():entity():id(), wirelink] = nowirelink()
                }
                #S["dev", table]:removeArray(Type):clear()
            }
            else {
                out("Error: Devices with type " + Type + " is not exists.\n")
            }
        }
    }
    else {
        out("Usage: dremove [id/type]\n")
    }
    end()
}
