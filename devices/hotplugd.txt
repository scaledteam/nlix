#
# Created by scaled
#

@name hotplugd

@inputs [Port1 Port2 Port3 Port4]:wirelink
@persist PORTS_COUNT
@persist [HotplugdPortsOld]:array HotplugdCounter
PORTS_COUNT = 4

P2F["hotplugd", string] = "hotplugd"

function hotplugd() {
    # hot plug
    if (HotplugdCounter >= PORTS_COUNT) {
        HotplugdCounter = 1
    }
    else {
        HotplugdCounter++
    }
    
    local Port = select(HotplugdCounter, Port1, Port2, Port3, Port4)
    local PortEntity = Port:entity()
    
    if (PortEntity:id() != HotplugdPortsOld[HotplugdCounter, number]) {
        HotplugdPortsOld[HotplugdCounter, number] = PortEntity:id()
        
        #[if (PortEntity) {
            # Check if device exists
            local Type = Port:type()
            local EntityId = PortEntity:id()
            
            local Devices = S["devices", table]
            if (!Devices:exists(Type)) {
                Devices[Type, array] = array(Port)
                Devices["byId", table][EntityId, wirelink] = Port
            }
            elseif (Devices["byId", table][EntityId, wirelink] != Port) {
                Devices[Type, array]:pushWirelink(Port)
                Devices["byId", table][EntityId, wirelink] = Port
            }
        }]#
        deviceNew(Port)
    }
    
    # return device from dead app
    local Devices = S["devices", table]
    local Programs = Devices["P", table]

    if (Programs) {
        local Counter = Devices["counter", number] + 1
        
        if (Counter > Programs:count()) {
            Counter = 1
        }
        
        if (!Programs[Counter, table]) {
            Programs:remove(Counter)
            local Device = Devices["D", table]:removeWirelink(Counter)
            
            if (Device) {
                local DeviceType = Device:type()
                
                if (Devices:exists(DeviceType)) {
                    Devices[DeviceType, array]:unshiftWirelink(Device)
                }
                else {
                    Devices[DeviceType, array] = array(Device)
                }
            }
        }
        else {
            Devices["counter", number] = Counter
        }
    }
}
