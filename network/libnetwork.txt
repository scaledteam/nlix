#
# Created by scaled
#

@name libnetwork
@outputs Net:table
@persist [NetLocal NetList]:table

# For router
function netInit() {
    if (Net:exists("Network")) {
        Network = Net["Network", table]
        
        if (!NetList:exists(Network:id())) {
            NetList[Network:id(), table] = Network
        }
    }
}

function table:netAdd(Client:table) {
    Client["Network", table] = This
    This:pushTable(Client)
}


# For programs
function table netBind(Port) {
    local Socket = table()
    NetLocal[Port, table] = Socket
    
    return Socket
}

function table netFindTargetByName(Name:string) {
    foreach (I, Network:table = NetList) {
        if (Network:exists(Name)) {
            return Network[Name, table]
        }
    }
}

function table table:netConnect(Port) {
    if (This:exists(Port)) {
        return This[Port, table]
    }
    else {
        return NULL
    }
}

