#
# Created by scaled
#

@name spirit level

xmenuAdd("real", "spirit level", "spiritlevel")

PList["spiritlevel", number] = 1

function spiritlevel() {
    switch (P["state", number]) {
        case 0,
            if (xcanCreate(6)) {
                local Res = vec2(min(xres()[1], xres()[2]))
                P["xframe", table]["size", vector2] = Res
                
                local Background = xcreate("box"):xsize(Res):xcolor(vec())
                
                local CircleSize = Res[1] / 10
                P["multiplier", number] = Res[1] / 2 - CircleSize
                P["circle", table] = xcreate("circle"):xsize(vec2(CircleSize))
                
                xcreate("polyOutline"):xparent(Background):xvertices(array(
                    Res * vec2(-0.5, -0.5),
                    Res * vec2( 0.5, -0.5),
                    Res * vec2( 0.5, -0.3),
                    Res * vec2(-0.5, -0.3),
                    Res * vec2(-0.5, -0.1),
                    Res * vec2( 0.5, -0.1),
                    Res * vec2( 0.5,  0.1),
                  	 Res * vec2(-0.5,  0.1),
                    Res * vec2(-0.5,  0.3),
                    Res * vec2( 0.5,  0.3),
                    Res * vec2( 0.5,  0.5),
                    Res * vec2(-0.5,  0.5),
                    Res * vec2(-0.5, -0.5),
                    Res * vec2(-0.5,  0.5),
                    Res * vec2(-0.3,  0.5),
                    Res * vec2(-0.3, -0.5),
                    Res * vec2(-0.1, -0.5),
                    Res * vec2(-0.1,  0.5),
                    Res * vec2( 0.1,  0.5),
                    Res * vec2( 0.1, -0.5),
                    Res * vec2( 0.3, -0.5),
                    Res * vec2( 0.3,  0.5),
                    Res * vec2( 0.5,  0.5),
                    Res * vec2( 0.5, -0.5)
                ))
                
                P["state", number] = 1
            }
            break
        
        case 1,
            if (xcanDraw()) {
                local Res = xres()
                
                local Offset = Res / 2
                
                local Screen = P["xdevice", wirelink]:entity()
                local X = Screen:toWorldAxis(P["xparam", table]["x", vector])
                local Y = Screen:toWorldAxis(P["xparam", table]["y", vector])
                local Z = Screen:toWorldAxis(P["xparam", table]["z", vector])
                
                #local Pos = vec2(vec2(Z):dot(vec2(Y):rotate(90)), vec2(Z):dot(vec2(X):rotate(-90))) * P["multiplier", number]
                
                local Pos = vec2(
                    vec(0, 0, -1):dot(X),
                    vec(0, 0, -1):dot(Y)
                ) * P["multiplier", number]
                
                P["circle", table]:xpos(Offset + Pos)
            }
            break
    }
}
