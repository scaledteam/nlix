#
# Created by scaled
#

# Вернуть "S"
# Сделать chroot
# Сделать sync программой
# Сделать сеть
# Сделать для libdevices режим захвата девайса на 1 раз вместо сканирования
# Проверить можно ли вставлять приложение в середину KTasks
# Протаскивать P["In"] для GUI приложений
# Сделать функции вида reboot(), pidof("program"), kill(2)
# Сделать верхний frame для курсора и меню в xwm

@name nlix
@persist [P NULL KTasks]:table KTaskId KPerf
@trigger none

if (tickClk()) {
    if (NULL) {
        NULL:clear()
    }
    
    while (perf(KPerf)) {
        # Counter
        KTaskId = KTaskId % KTasks:count() + 1
        
        # Program memory
        P = KTasks[KTaskId, table]
        
        # Program is alive
        if (P) {
            # Clear if parent killed
            if (!P["parent", table] & P:exists("parent")) {
                P:clear()
                KTasks:remove(KTaskId)
                KTaskId--
            }
            else {
                P["function", string]()
            }
        }
        # If program is dead
        else {
            # If one program is not valid
            if (KTasks) {
                KTasks:remove(KTaskId)
                KTaskId--
            }
            # If all programs is not valid
            else {
                runOnTick(0)
                break
            }
        }
    }
}
elseif (first()) {
    KPerf = 20
    
    #include "nlix/system/init"
    KTasks:pushTable(table("function" = "init"))
    runOnTick(1)
}
elseif (duped() | dupefinished()) {
    reset()
}
