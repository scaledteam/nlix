#
# Created by scaled
#

@name xstart

PExist["xstart", number] = 1

function xstart() {
    switch (P["state", number]) {
        case 0,
            if (args() < 1) {
                out("Usage: xstart [program name]\n")
                end()
            }
            elseif (deviceGet("gmod_wire_egp") | deviceGet("gmod_wire_egp_emitter")) {
                local Device = P["device", wirelink]
                
                Device:egpClear()
                Device:egpDrawTopLeft(1)
                Device:egpResolution(vec2(), vec2(512))
                
                Device:egpBox(1, vec2(), vec2())
                
                P["xdevice", wirelink] = Device
                P:remove("device")
                
                P["update", number] = systime() + tickInterval()
                P["state", number] = 1
            }
            break
        
        case 1,
            if (systime() > P["update", number]) {
                local Device = P["xdevice", wirelink]
                
                local Pos0 = Device:egpToWorld(vec2())
                local PosX = Device:egpToWorld(vec2(512, 0))
                local PosY = Device:egpToWorld(vec2(0, 512))
                
                local SizeX = Pos0:distance(PosX)
                local SizeY = Pos0:distance(PosY)
                
                local Width = 512
                if (Device:type() == "gmod_wire_egp_emitter") {
                    Width = 1024
                }
                
                local Res = floor(vec2(SizeX, SizeY) / max(SizeX, SizeY) * Width)
                Device:egpResolution(vec2(), Res)
                
                P["xframe", table] = table(
                    "id" = 1,
                    "type" = "frame",
                    "size" = Res,
                    "count" = 1
                )
                
                P["xobjectsAll", table] = table(P["xframe", table])
                
                local DeviceEntity = Device:entity()
                P["xparam", table] = table(
                    "textMultiplier" = 512 / Res[2],
                    "symbolWidth" = 0.54 * Res[1] / Res[2],
                    "x" = DeviceEntity:toLocalAxis(PosX - Pos0):normalized(),
                    "y" = DeviceEntity:toLocalAxis(PosY - Pos0):normalized(),
                    "z" = DeviceEntity:toLocalAxis((PosY - Pos0):cross(PosX - Pos0)):normalized(),
                    "0" = DeviceEntity:toLocal(Pos0),
                    "dpu" = 512 / SizeX
                )
                
                P["xobjects", table] = table()
                
                P:remove("update")
                P:remove("state")
                
                P["name", string] = P["args", array]:shiftString()
                
                if (!PExist[P["name", string], number]) {
                    out("Error: Program \"" + P["name", string] + "\" is not exist.\n")
                    end()
                }
            }
            break
    }
}
